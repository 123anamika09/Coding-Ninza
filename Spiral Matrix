import java.util.*;
public class Solution {
    public static int[] spiralMatrix(int [][]MATRIX) {
         List<Integer> resultList = new ArrayList<>();
        int m = MATRIX.length;  // Number of rows
        int n = MATRIX[0].length;  // Number of columns
        
        int top = 0, bottom = m - 1, left = 0, right = n - 1;
        
        while (top <= bottom && left <= right) {
            // Traverse from left to right
            for (int i = left; i <= right; ++i) {
                resultList.add(MATRIX[top][i]);
            }
            top++;
            for (int i = top; i <= bottom; ++i) {
                resultList.add(MATRIX[i][right]);
            }
            right--;
            
            if (top <= bottom) {
                // Traverse from right to left
                for (int i = right; i >= left; --i) {
                    resultList.add(MATRIX[bottom][i]);
                }
                bottom--;
            }
            
            if (left <= right) {
                // Traverse upwards
                for (int i = bottom; i >= top; --i) {
                    resultList.add(MATRIX[i][left]);
                }
                left++;
            }
        }
        
        // Convert the List to an array
        int[] resultArray = new int[resultList.size()];
        for (int i = 0; i < resultList.size(); i++) {
            resultArray[i] = resultList.get(i);
        }
        
        return resultArray;
        
      
    }
}
